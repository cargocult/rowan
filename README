Rowan Framework


Rowan is a simple Microframework for node.js (currently targetting
0.30.1).

It is designed as a modular and hierarchical microframework.

Each controller in the hierarchy has the same structure: it takes a
context object that contains both the Node.js request and response
objects and a callback function that it notifies when it is done. 

It can optionally write its content to the response object in the
context. Then, when it is done (or when something goes wrong) it calls
the callback function, passing in any error.

Controllers are composed into a tree structure, making it very easy to
customize the behavior of whole chunks of a site and to implement
fall-over behavior, security wrappers, authentication, and so on.

Branches in the tree might dispatch a request based on a URL, for
example, or might have a fallback in case their preferred child node
raises an error.

Most often, however, the trees can be relatively flat. They might have
an error_handler node at their root (which catches and reports any
problems in the tree), then a single router which forwards different
urls to controllers that generate the correct output. This pattern is
shown in the first example application.

The code is based on my Python/WSGI Rowan framework code (on github at
http://github.com/idmillington/Rowan-Python). There are two major
differences between this Node.js implementation and that:

1. This version doesn't have the hierarchical blackboard data
structure that can be useful for hiding data from controllers. I might
add this later, it certainly improves modularity.

2. Because Node.js doesn't have an established templating language, I
have added a simple templating system. Possibly too simple!

I am using this microframework as the glue in an SOA project,
integrating with conventional servers, databases and CouchDB.

It has been updated to work with Node 0.30.1 (and is considerably
simpler as a result), removing its former reliance on promises.

Get in touch with any observations or questions.

---

Copyright (c) 2009 Ian Millington. See the LICENSE file for details.

